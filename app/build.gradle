apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "cn.innovativest.ath"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 18
        versionName "1.1.18"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构
//            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a', 'x86'
        }

    }
    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        myConfig {
            storeFile file("android.keystore")
            storePassword "leepan"
            keyAlias "android.keystore"
            keyPassword "leepan"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true

            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.myConfig
            versionNameSuffix "_debug"

            buildConfigField "String", "HTTP_PROD", "\"http://ath.pub/api/v2/\""
            buildConfigField "String", "HTTP_TEST", "\"http://ath.pub/api/v2/\""

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            debuggable false
            shrinkResources false
            signingConfig signingConfigs.myConfig

            buildConfigField "String", "HTTP_PROD", "\"http://ath.pub/api/v2/\""
            buildConfigField "String", "HTTP_TEST", "\"http://ath.pub/api/v2/\""

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->  // each 改为 all
                    def fileName
                    def outFile = output.outputFile
                    if (outFile != null && outFile.name.endsWith('.apk')) {
                        if (variant.buildType.name.equals('release')) {
                            fileName = "ath_${defaultConfig.versionCode}_${defaultConfig.versionName}_${releaseTime()}.apk"
                        } else if (variant.buildType.name.equals('debug')) {
                            fileName = "ath_${defaultConfig.versionCode}_${defaultConfig.versionName}_${releaseTime()}_debug.apk"
                        }
                        outputFileName = fileName  //  output.outputFile 改为 outputFileName
                    }
                }
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha03'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.google.dagger:dagger:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'
    implementation 'com.yanzhenjie:permission:1.1.2'
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.umeng.sdk:common:1.5.3'
    implementation 'com.umeng.analytics:analytics:6.1.4'
    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    implementation 'com.umeng.sdk:common:1.5.3'
    //PushSDK必须依赖utdid所以需要加入对应依赖
    //    implementation 'com.umeng.sdk:utdid:1.1.5.3'
    //PushSDK
    implementation 'com.umeng.sdk:push:4.2.0'
//    api project(':IMKit')
    implementation 'com.github.huburt-Hu:NewbieGuide:v2.4.0'
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0.1
    implementation 'com.github.lzyzsd:circleprogress:1.2.1'

    //完整版引入
    implementation 'com.shuyu:GSYVideoPlayer:7.0.1'

    implementation 'com.zhihu.android:matisse:0.5.2-beta4'
}

